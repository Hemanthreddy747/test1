import React, { useState } from 'react';

const Login = () => {
  const [formType, setFormType] = useState("login");
  const [username, setUsername] = useState("");
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [confirmPassword, setConfirmPassword] = useState("");
  const [errors, setErrors] = useState({});

  const validateSignup = () => {
    const newErrors = {};
    if (!email) {
      newErrors.email = "Email is required";
    } else if (!/\S+@\S+\.\S+/.test(email)) {
      newErrors.email = "Email address is invalid";
    }
    if (!password) {
      newErrors.password = "Password is required";
    } else if (password.length < 6) {
      newErrors.password = "Password must be at least 6 characters";
    }
    if (password !== confirmPassword) {
      newErrors.confirmPassword = "Passwords do not match";
    }
    setErrors(newErrors);
    return Object.keys(newErrors).length === 0;
  };

  const handleSignupSubmit = (e) => {
    e.preventDefault();
    if (validateSignup()) {
      // Handle signup logic here
      console.log("Signup successful");
    }
  };

  return (
    <div>
      {formType === "signup" && (
        <form onSubmit={handleSignupSubmit}>
          <div>
            <label htmlFor="username">Username (optional)</label>
            <input
              type="text"
              id="username"
              value={username}
              onChange={(e) => setUsername(e.target.value)}
            />
          </div>
          <div>
            <label htmlFor="email">Email</label>
            <input
              type="email"
              id="email"
              value={email}
              onChange={(e) => setEmail(e.target.value)}
            />
            {errors.email && <p className="error">{errors.email}</p>}
          </div>
          <div>
            <label htmlFor="password">Password</label>
            <input
              type="password"
              id="password"
              value={password}
              onChange={(e) => setPassword(e.target.value)}
            />
            {errors.password && <p className="error">{errors.password}</p>}
          </div>
          <div>
            <label htmlFor="confirmPassword">Confirm Password</label>
            <input
              type="password"
              id="confirmPassword"
              value={confirmPassword}
              onChange={(e) => setConfirmPassword(e.target.value)}
            />
            {errors.confirmPassword && <p className="error">{errors.confirmPassword}</p>}
          </div>
          <button type="submit" className="button">Sign Up</button>
        </form>
      )}
      {formType === "login" && (
        <p className="text-center mt-3">
          Don't have an account?{" "}
          <button
            className="link-button"
            onClick={() => setFormType("signup")}
          >
            Sign Up
          </button>
        </p>
      )}
      {formType === "login" && (
        <p className="text-center">
          Forgot your password?{" "}
          <button
            className="link-button"
            onClick={() => setFormType("forgotPassword")}
          >
            Reset here
          </button>
        </p>
      )}
      {(formType === "signup" || formType === "forgotPassword") && (
        <p className="text-center mt-3">
          <button
            className="link-button"
            onClick={() => setFormType("login")}
          >
            Back to Login
          </button>
        </p>
      )}
    </div>
  );
};

export default Login;